#!/bin/bash
enable_apps_conf()
{
	for CONF in  /opt/borhan/app/configurations/apache/conf.d/apps.conf /opt/borhan/app/configurations/apache/conf.d/var.conf ;do
		ln -sf $CONF /etc/apache2/sites-available/
		a2ensite `basename $CONF`
	done
}
enable_admin_conf()
{
	ln -sf /opt/borhan/app/configurations/apache/conf.d/admin.conf /etc/apache2/sites-available/
	a2ensite admin.conf
}

BORHAN_FUNCTIONS_RC=/opt/borhan/bin/borhan-functions.rc
if [ ! -r "$BORHAN_FUNCTIONS_RC" ];then
        OUT="${BRIGHT_RED}ERROR:could not find $BORHAN_FUNCTIONS_RC so, exiting..${NORMAL}"
        echo -en $OUT
        exit 3
fi

RC_FILE=/etc/borhan.d/system.ini
if [ ! -r "$RC_FILE" ];then
	echo -e "${BRIGHT_RED}ERROR: could not find $RC_FILE so, exiting..${NORMAL}"
	exit 1 
fi
. $RC_FILE


. $BORHAN_FUNCTIONS_RC
BORHAN_PREFIX=/opt/borhan
APP_DIR=/opt/borhan/app
BORHAN_GROUP=borhan
BORHAN_USER=borhan
APACHE_USER=www-data
APACHE_GROUP=www-data

for i in filter expires headers proxy rewrite;do
	OUT=`a2enmod $i`
done
BORHAN_VERSION="`dpkg-query -W -f'${Version}' borhan-base|awk -F "+" '{print $1}'`"
. /usr/share/debconf/confmodule

chown -R $BORHAN_USER:$APACHE_GROUP $BORHAN_PREFIX/log 
chown -R $BORHAN_USER:$APACHE_GROUP $BORHAN_PREFIX/tmp 
chown -R $BORHAN_USER:$APACHE_GROUP $BORHAN_PREFIX/app/cache 
chmod -R 775 $BORHAN_PREFIX/log $BORHAN_PREFIX/tmp $BORHAN_PREFIX/app/cache $BORHAN_PREFIX/web

# handle the zz_borhan*.ini
if [ "$1" = "configure" ]; then
	#update-rc.d memcache defaults
	trap 'my_trap_handler "${LINENO}" ${$?}' ERR
	TIMEZ=`get_tz`
	send_install_becon `basename $0` $TIMEZ install_start 0 
	BORHAN_APACHE_CONF=$APP_DIR/configurations/apache
	BORHAN_APACHE_CONFD=$BORHAN_APACHE_CONF/conf.d
	db_input critical borhan-front/is_apache_ssl || true
	db_go || true
	db_get borhan-front/is_apache_ssl
	IS_SSL="$RET"
	if [ "$IS_SSL" != 'true' ];then
		trap - ERR
		echo "use borhan" | mysql -h$DB1_HOST -u$DB1_USER -p$DB1_PASS -P$DB1_PORT $DB1_NAME 2> /dev/null
		if [ $? -eq 0 ];then
			echo "update permission set STATUS=3 WHERE permission.NAME='FEATURE_BMC_ENFORCE_HTTPS' ;" | mysql $DB1_NAME -h$DB1_HOST -u$DB1_USER -P$DB1_PORT -p$DB1_PASS 2> /dev/null 
		fi
		trap 'my_trap_handler "${LINENO}" ${$?}' ERR
		MAIN_APACHE_CONF=$BORHAN_APACHE_CONF/borhan.conf
	else
			a2enmod ssl
			# configure SSL:
			MAIN_APACHE_CONF=$BORHAN_APACHE_CONF/borhan.ssl.conf
			cp $BORHAN_APACHE_CONF/borhan.ssl.conf.template $MAIN_APACHE_CONF 
			#db_get borhan-front/apache_ssl_cert
			db_input critical borhan-front/apache_ssl_cert || true
			db_go || true
			db_get borhan-front/apache_ssl_cert
			CRT_FILE=$RET

			db_input critical borhan-front/apache_ssl_key || true
			db_go || true
			db_get borhan-front/apache_ssl_key
			KEY_FILE=$RET

			db_input critical borhan-front/apache_ssl_chain || true
			db_go || true
			db_get borhan-front/apache_ssl_chain
			CHAIN_FILE=$RET
			#if [ -z "$CA_FILE" ];then
			#	echo -e "${CYAN}Please input path to your SSL CA file or leave empty in case you have none${CYAN}:${NORMAL}"
			#	read -e CA_FILE
			#fi
			# check key and crt match
			CRT_SUM=`openssl x509 -in $CRT_FILE -modulus -noout | openssl md5`
			KEY_SUM=`openssl rsa -in $KEY_FILE -modulus -noout | openssl md5`
			if [ "$CRT_SUM" != "$KEY_SUM" ];then
				echo -e ${BRIGHT_RED}"

			ERROR: MD5 sums between .key and .crt files DO NOT MATCH
			# openssl rsa -in $KEY_PATH -modulus -noout | openssl md5
			$KEY_HASH
			# openssl x509 -in $CERT_PATH -modulus -noout | openssl md5
			$CRT_HASH
			${NORMAL}
			"
				exit 3
			fi
			# it might fail if done before there's a DB but I don't want it to stop the config script, it can be easily fixed later.
			php $APP_DIR/deployment/base/scripts/insertPermissions.php -d $APP_DIR/deployment/permissions/ssl/ >/dev/null 2>&1 ||true

			# if cert is self signed:
			if [ -r "$CHAIN_FILE" ];then
				VERIFY_COMMAND="openssl verify -CAfile $CHAIN_FILE $CRT_FILE"
			elif [ -r "$CA_FILE" ];then
				VERIFY_COMMAND="openssl verify -CAfile $CA_FILE $CRT_FILE"
			else
				VERIFY_COMMAND="openssl verify $CRT_FILE"
			fi
			if $VERIFY_COMMAND | grep 'self signed certificate' -q ;then
				db_input critical borhan-front/self_signed_cert || true
				db_go || true
				db_get borhan-front/self_signed_cert

				echo -e "settings.clientConfig.verifySSL=0" >> $APP_DIR/configurations/admin.ini
				sed -i  's@\(\[production\]\)@\1\nsettings.clientConfig.verifySSL=0@' $APP_DIR/configurations/admin.ini
			fi
			sed "s#@SSL_CERTIFICATE_FILE@#$CRT_FILE#g" -i $MAIN_APACHE_CONF
			sed -i "s#@SSL_CERTIFICATE_KEY_FILE@#$KEY_FILE#g" $MAIN_APACHE_CONF
			if [ -r "$CHAIN_FILE" ];then
				sed -i "s^SSLCACertificateFile @SSL_CERTIFICATE_CHAIN_FILE@^SSLCertificateChainFile $CHAIN_FILE^" $MAIN_APACHE_CONF
			else
				CHAIN_FILE="NO_CHAIN"
				sed -i "s^SSLCACertificateFile @SSL_CERTIFICATE_CHAIN_FILE@^#SSLCertificateChainFile @SSL_CERTIFICATE_CHAIN_FILE@^" $MAIN_APACHE_CONF
			fi
			if [ -r "$CA_FILE" ];then
				sed -i "s^SSLCACertificateFile @SSL_CERTIFICATE_CA_FILE@^SSLCACertificateFile $CA_FILE^" $MAIN_APACHE_CONF
			else
				CA_FILE="NO_CA"
				sed -i "s^SSLCACertificateFile @SSL_CERTIFICATE_CA_FILE@^#SSLCACertificateFile @SSL_CERTIFICATE_CA_FILE@^" $MAIN_APACHE_CONF
			fi
			echo "CRT_FILE=$CRT_FILE" >> $RC_FILE
			echo "KEY_FILE=$KEY_FILE" >> $RC_FILE
			echo "CA_FILE=$CA_FILE" >> $RC_FILE
			echo "CHAIN_FILE=$CHAIN_FILE" >> $RC_FILE

		fi

	if [ "$IS_SSL" = 'true' ];then
		DEFAULT_PORT=443
		trap - ERR
		echo "use borhan" | mysql -h$DB1_HOST -u$DB1_USER -p$DB1_PASS -P$DB1_PORT $DB1_NAME 2> /dev/null
		if [ $? -eq 0 ];then
			echo "update permission set STATUS=1 WHERE permission.PARTNER_ID IN ('0') AND permission.NAME='FEATURE_BMC_ENFORCE_HTTPS' ORDER BY permission.STATUS ASC LIMIT 1;" | mysql $DB1_NAME -h$DB1_HOST -u$DB1_USER -P$DB1_PORT -p$DB1_PASS 
		fi
		trap 'my_trap_handler "${LINENO}" ${$?}' ERR
	else
		DEFAULT_PORT=80
	fi
		db_input critical borhan-front/vhost_port || true
		db_go || true
		db_get borhan-front/vhost_port
		BORHAN_VIRTUAL_HOST_PORT=$RET

		if [ "$BORHAN_VIRTUAL_HOST_PORT" -eq 443 ];then
			PROTOCOL="https"
		else
			PROTOCOL="http"
		fi

		db_get 'borhan-base/apache_hostname'
		APACHE_HOST="$RET"
		db_get 'borhan-base/vhost_port'
		APACHE_PORT="$RET"
		if [ "$APACHE_PORT" -eq 443 -o "$APACHE_PORT" -eq 80 ];then
			BORHAN_VIRTUAL_HOST_NAME=$APACHE_HOST
			DEF_SERVICE_URL="$PROTOCOL://$BORHAN_VIRTUAL_HOST_NAME"
		else
			BORHAN_VIRTUAL_HOST_NAME="$APACHE_HOST:$BORHAN_VIRTUAL_HOST_PORT"
			DEF_SERVICE_URL="$PROTOCOL://$BORHAN_VIRTUAL_HOST_NAME"
		fi
		db_set 'borhan-front/service_url' $DEF_SERVICE_URL
		db_input critical borhan-front/service_url || true
		db_go || true
		db_get borhan-front/service_url
		SERVICE_URL=$RET



	cp $BORHAN_APACHE_CONFD/enabled.borhan.conf.template $BORHAN_APACHE_CONFD/enabled.borhan.conf 
	cp $BORHAN_APACHE_CONF/borhan.conf.template $BORHAN_APACHE_CONF/borhan.conf
	sed -e "s#@APP_DIR@#$APP_DIR#g" -e "s#@LOG_DIR@#$LOG_DIR#g" -e "s#@WEB_DIR@#$WEB_DIR#g" -e "s#@BORHAN_VIRTUAL_HOST_NAME@#$BORHAN_VIRTUAL_HOST_NAME#g" -e "s#@BORHAN_VIRTUAL_HOST_PORT@#$BORHAN_VIRTUAL_HOST_PORT#g" -e "s#@SERVICE_URL@#$SERVICE_URL#g" -e "s#@BORHAN_FULL_VIRTUAL_HOST_NAME@#$APACHE_HOST:$BORHAN_VIRTUAL_HOST_PORT#g" -i $MAIN_APACHE_CONF $BORHAN_APACHE_CONFD/enabled.borhan.conf

	CONF_FILES=`find $APP_DIR/configurations  -type f| grep -v template`

	a2dissite "zzzborhan*" || true
	ln -fs $MAIN_APACHE_CONF /etc/apache2/sites-available/zzz`basename $MAIN_APACHE_CONF`
	a2ensite zzz`basename $MAIN_APACHE_CONF`
	if [ -x "`which php5enmod 2>/dev/null`" ];then
		php5enmod zz-borhan
	fi
	if [ -x /opt/borhan/bin/php7enmod ];then
		/opt/borhan/bin/php7enmod zz-borhan
	fi

	CONFIG_CHOICES="
Please select one of the following options [0]:
0. All web interfaces 
1. Borhan Management Console [BMC], Hosted Apps, HTML5 lib and ClipApp
2. KAC - Borhan Admin Console
"

	db_set borhan-front/web_interfaces "$CHOICES"
	db_get borhan-front/web_interfaces && CONFIG_CHOICE=$RET

	find $BORHAN_APACHE_CONFD -type l -exec rm {} \;

	if [ "$CONFIG_CHOICE" = 1 ];then
		enable_apps_conf 
	elif [ "$CONFIG_CHOICE" = 2 ];then
		enable_admin_conf
	elif [ "$CONFIG_CHOICE" = 0 ];then
		enable_apps_conf
		enable_admin_conf $BORHAN_APACHE_CONFD
	else
		enable_apps_conf $BORHAN_APACHE_CONFD
		enable_admin_conf $BORHAN_APACHE_CONFD
	fi
	# cronjobs:
	ln -sf $APP_DIR/configurations/cron/api /etc/cron.d/borhan-api
	# currently causing issues, commenting
	#ln -sf $APP_DIR/configurations/cron/cleanup /etc/cron.d/borhan-cleanup

	# logrotate:
	ln -sf $APP_DIR/configurations/logrotate/borhan_apache /etc/logrotate.d/ 
	ln -sf $APP_DIR/configurations/logrotate/borhan_apps /etc/logrotate.d/

	find $BASE_DIR/app/cache/ $BASE_DIR/log -type d -exec chmod 775 {} \; 
	find $BASE_DIR/app/cache/ $BASE_DIR/log -type f -exec chmod 664 {} \; 
	chown -R $BORHAN_USER.$APACHE_USER $BASE_DIR/app/cache/ $BASE_DIR/log
	service apache2 reload || service apache2 restart
	trap - ERR
	set +e
	curl "$SERVICE_URL/api_v3/index.php?service=system&action=ping" -k  2> /dev/null >/tmp/ping_$$.xml
	xmllint /tmp/ping_$$.xml >/dev/null 2>&1
	if [ $? -ne 0 ];then
		db_input critical borhan-front/disable_default_vhost || true
		db_go || true
		db_get borhan-front/disable_default_vhost 
		if [ "$RET" = true ];then
			for SITE in 000-default.conf default-ssl.conf;do
				a2dissite $SITE
			done
			service apache2 reload  || service apache2 restart
		fi
	fi	
	rm /tmp/ping_$$.xml
	db_stop
	ln -sf $BASE_DIR/app/configurations/monit/monit.d/httpd.rc /etc/monit/conf.d/apache2.rc 
	ln -sf $BASE_DIR/app/configurations/monit/monit.d/memcached.rc /etc/monit/conf.d/
	service monit restart
	trap - ERR
	echo "use borhan" | mysql -h$DB1_HOST -u$DB1_USER -p$DB1_PASS -P$DB1_PORT $DB1_NAME 2> /dev/null
	if [ $? -eq 0 ];then
		HTML5_DIR=`ls -ld $BASE_DIR/web/html5/html5lib/v* 2>/dev/null|awk -F " " '{print $NF}' |tail -1`
		HTML5_VER=`basename $HTML5_DIR`
		HTML5_STUDIO_DIR=`ls -ld $BASE_DIR/apps/studio/v* 2>/dev/null|awk -F " " '{print $NF}' |tail -1`
		HTML5_STUDIO_VER=`basename $HTML5_STUDIO_DIR`
		if [ -f "$BASE_DIR/apps/studio/$HTML5_STUDIO_VER/studio.template.ini" ];then
			sed -e "s#@HTML5_STUDIO_VER@#$HTML5_STUDIO_VER#g" -e "s#@HTML5_VER@#$HTML5_VER#g" -e "s#@CDN_HOST@#$BORHAN_VIRTUAL_HOST_NAME#g" $BASE_DIR/apps/studio/$HTML5_STUDIO_VER/studio.template.ini > $BASE_DIR/apps/studio/$HTML5_STUDIO_VER/studio.ini		      
		fi
		if [ -r "$BASE_DIR/apps/studio/$HTML5_STUDIO_VER/studio.ini" ];then
			php $BASE_DIR/app/deployment/uiconf/deploy_v2.php --user=www-data --ini=$BASE_DIR/apps/studio/$HTML5_STUDIO_VER/studio.ini >> /dev/null
			chown -R $APACHE_USER.$BORHAN_GROUP $WEB_DIR/content/generatedUiConf/
			sed -i "s@^\(studio_version\s*=\)\(.*\)@\1 $HTML5_STUDIO_VER@g" -i $BASE_DIR/app/configurations/local.ini
		fi
	# we can't use 'dpkg show borhan-bmc' because this node may not be the one where we installed the BMC deb on, as it resides in the web dir and does not need to be installed on all front nodes.
		BMC_PATH=`ls -ld $BASE_DIR/web/flash/bmc/v* 2>/dev/null|awk -F " " '{print $NF}' |tail -1`
		if [ -d "$BMC_PATH" ];then
			php $BASE_DIR/app/deployment/uiconf/deploy_v2.php --user=www-data --ini=$BMC_PATH/config.ini >> /dev/null
			chown -R $APACHE_USER.$BORHAN_GROUP $WEB_DIR/content/generatedUiConf/
		fi
		sed -i "s@^\(html5_version\s*=\)\(.*\)@\1 $HTML5_VER@g" -i $BASE_DIR/app/configurations/local.ini
	fi
	trap 'my_trap_handler "${LINENO}" ${$?}' ERR
	send_install_becon `basename $0` $TIMEZ install_success 0 

fi
